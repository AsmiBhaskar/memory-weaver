# Generated by Django 4.2.7 on 2025-08-30 06:25

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CollectiveEmotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('collective_joy', models.FloatField(default=0.0)),
                ('collective_calm', models.FloatField(default=0.0)),
                ('collective_energy', models.FloatField(default=0.0)),
                ('collective_melancholy', models.FloatField(default=0.0)),
                ('active_sessions', models.IntegerField(default=0)),
                ('total_readings_processed', models.IntegerField(default=0)),
                ('dominant_collective_emotion', models.CharField(blank=True, max_length=20)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='EmotionReading',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_id', models.CharField(db_index=True, max_length=100)),
                ('joy', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('calm', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('energy', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('melancholy', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('dominant_emotion', models.CharField(blank=True, max_length=20)),
                ('emotion_intensity', models.FloatField(default=0.0)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='EnvironmentResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lighting_color', models.CharField(default='#FFFFFF', max_length=7)),
                ('lighting_intensity', models.FloatField(default=0.5, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('background_color', models.CharField(default='#2C3E50', max_length=7)),
                ('audio_tone', models.CharField(default='ambient', max_length=50)),
                ('audio_frequency', models.FloatField(default=440.0)),
                ('audio_volume', models.FloatField(default=0.1, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('visual_pattern', models.CharField(default='gentle_ripples', max_length=50)),
                ('particle_count', models.IntegerField(default=1000)),
                ('animation_speed', models.FloatField(default=1.0)),
                ('temperature', models.FloatField(default=22.0)),
                ('humidity', models.FloatField(default=50.0)),
                ('air_quality', models.CharField(default='good', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('emotion_reading', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='environment_response', to='emotions.emotionreading')),
            ],
        ),
        migrations.CreateModel(
            name='EmotionSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('total_readings', models.IntegerField(default=0)),
                ('average_joy', models.FloatField(default=0.0)),
                ('average_calm', models.FloatField(default=0.0)),
                ('average_energy', models.FloatField(default=0.0)),
                ('average_melancholy', models.FloatField(default=0.0)),
                ('device_type', models.CharField(blank=True, max_length=50)),
                ('browser', models.CharField(blank=True, max_length=100)),
                ('location_country', models.CharField(blank=True, max_length=2)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_activity'],
            },
        ),
        migrations.AddIndex(
            model_name='emotionreading',
            index=models.Index(fields=['session_id', '-timestamp'], name='emotions_em_session_fc9a96_idx'),
        ),
        migrations.AddIndex(
            model_name='emotionreading',
            index=models.Index(fields=['dominant_emotion'], name='emotions_em_dominan_755fd9_idx'),
        ),
        migrations.AddIndex(
            model_name='emotionreading',
            index=models.Index(fields=['-timestamp'], name='emotions_em_timesta_ba8437_idx'),
        ),
    ]
